ENUNCIADO:


- El administrador de un edificio de oficinas cuenta, en papel, con la información del pago de
las expensas de dichas oficinas.
Implementar un programa que invoque a módulos para cada uno de los siguientes puntos:
a. Genere un vector, sin orden, con a lo sumo las 300 oficinas que administra. De cada oficina
se ingresa el código de identificación, DNI del propietario y valor de la expensa. La lectura
finaliza cuando se ingresa el código de identificación -1, el cual no se procesa.
b. Ordene el vector, aplicando el método de inserción, por código de identificación de la
oficina.
c. Ordene el vector aplicando el método de selección, por código de identificación de la oficina.


CODIGO: 

program Punto2;
const
  df = 300;
type
  
  Rango300 = 1..df;
  
  Oficina = record
    codigo:integer;
    DNI:integer;
    expensa:real;
  end;

  vOficinas = array[Rango300] of Oficina;

procedure leerOficina(var o:Oficina);
begin
  writeln('ingrese el codigo de indentificacion');
  readln(o.codigo);
  if (o.codigo <> -1) do
  begin
    writeln('ingrese el DNI ');
    readln(o.DNI);
    writeln('ingrese el valor de las expensas');
    readln(o.expensa);
  end;
end;

procedure cargarVector(var v:vOficinas; var dl:integer);
var
  Ofi:Oficina;
begin
  leerOficina(Ofi);
  while( Ofi.codigo <> -1 ) and ( dl <= df ) do
  begin
    v[dl]:= v;
    dl:= dl + 1;
    leerOficina(ofi);
  end;
end;

procedure ordenarVector(var v:vOficinas; dl:integer);
var
  i,j:integer; actual:Oficina;
begin
  for i:= 2 to dl do 
  begin
    actual:= v[i];
    j:= i-1;
    while (j > 0) and (v[j] > actual) do
    begin
      v[j+1]:= v[j];
      j:= j + 1;
    end;
    v[j+1]:=actual;
  end;
end;

procedure ordenarVector2(var v:vOficinas; dl:integer);
var
  i,j,indice:integer; item:Oficina;
begin
  for i:=1 to dl-1 do
  begin
    pos:= i;
    for j:= i+1 to dl do if(v[j] < v[pos]) then pos:=j;
    item:= v[pos];
    v[pos]:= v[i];
    v[i]:= item;
  end;
end;

var
  vector:vOficinas;
  dl:integer;
begin
  cargarVector(vector,dl);
  ordenarVector(vector,dl);
  ordenarVector2(vector,dl);
  
end.
