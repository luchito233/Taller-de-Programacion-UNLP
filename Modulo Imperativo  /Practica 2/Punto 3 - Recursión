ENUNCIADO:
3.- Escribir un programa que:

a. Implemente un módulo recursivo que genere una lista de números enteros “random”
mayores a 0 y menores a 100. Finalizar con el número 0.

b. Implemente un módulo recursivo que devuelva el mínimo valor de la lista.

c. Implemente un módulo recursivo que devuelva el máximo valor de la lista.

d. Implemente un módulo recursivo que devuelva verdadero si un valor determinado se
encuentra en la lista o falso en caso contrario.







CODIGO:
program Punto3;

type
  lista = ^nodo;
  nodo = record
    dato: integer;
    sig: lista;
  end;

procedure agregarAdelante(var l: lista; n: integer);
var 
  aux: lista;
begin
  new(aux);
  aux^.dato := n;
  aux^.sig := l;
  l := aux;
end;

procedure cargarLista(var l: lista);
var
  num: integer;
begin
  num := random(100);
  writeln(num);
  if (num <> 0) then
  begin
    agregarAdelante(l, num);
    cargarLista(l);
  end;
end;

procedure informarLista(l: lista);
begin
  while (l <> nil) do 
  begin
    writeln(l^.dato);
    l := l^.sig;
  end;
end;

procedure calcularMinimo(l:lista; var min:integer);
begin
  if(l <> nil) then
  begin
    if(l^.dato < min) then min:= l^.dato;
    calcularMinimo(l^.sig,min);
  end;
end;

procedure carcularMaximo(l:lista; var max:integer);
begin
  if(l <> nil) then
  begin
    if(l^.dato > max) then max:= l^.dato;
    carcularMaximo(l^.sig,max);
  end;
end;

function encontre(l:lista;n:integer):boolean;
begin
  if(l <> nil) then
  begin
    if(l^.dato = n) then encontre:=true
    else
      encontre:=encontre(l^.sig,n);
  end;
end;

var
  lis: lista;
  min,max:integer;
  num:integer;
begin
  randomize;
  lis := nil;
  min:= 9999;
  max:= -1;
  cargarLista(lis);
  informarLista(lis);
  calcularMinimo(lis,min);
  carcularMaximo(lis,max);
  writeln('minimo: ',min,' maximo: ',max);
  readln(num);
  writeln('se encuentra el numero en la lista? ',encontre(lis,num)) 
end.
